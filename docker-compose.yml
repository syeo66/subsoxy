version: '3.8'

services:
  subsoxy:
    build:
      context: .
      target: production
      args:
        BUILDKIT_INLINE_CACHE: 1
    image: subsoxy:latest
    container_name: subsoxy
    restart: unless-stopped
    
    ports:
      - "${PORT:-8080}:8080"
    
    environment:
      # Server configuration
      - PORT=8080
      - UPSTREAM_URL=${UPSTREAM_URL}
      - LOG_LEVEL=${LOG_LEVEL:-info}
      
      # Database configuration
      - DB_PATH=/app/data/subsoxy.db
      - DB_MAX_OPEN_CONNS=${DB_MAX_OPEN_CONNS:-25}
      - DB_MAX_IDLE_CONNS=${DB_MAX_IDLE_CONNS:-25}
      - DB_CONN_MAX_LIFETIME=${DB_CONN_MAX_LIFETIME:-0s}
      - DB_CONN_MAX_IDLE_TIME=${DB_CONN_MAX_IDLE_TIME:-0s}
      
      # Rate limiting
      - RATE_LIMIT_RPS=${RATE_LIMIT_RPS:-100}
      - RATE_LIMIT_BURST=${RATE_LIMIT_BURST:-200}
      
      # Security
      - SECURITY_HEADERS_ENABLED=${SECURITY_HEADERS_ENABLED:-true}
      - CORS_ALLOW_ORIGINS=${CORS_ALLOW_ORIGINS:-*}
      - DEV_MODE=${DEV_MODE:-false}
    
    volumes:
      # Persistent database storage
      - subsoxy_data:/app/data:rw
      # Optional: logs volume
      - subsoxy_logs:/app/logs:rw
    
    healthcheck:
      test: ["CMD-SHELL", "timeout 5 nc -z localhost 8080 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
      disable: true  # Disabled for distroless - rely on readiness probes in K8s
    
    # Security enhancements
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp:rw,noexec,nosuid,size=100m
    
    # Resource limits
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 128M
      restart_policy:
        condition: unless-stopped
        delay: 5s
        max_attempts: 3

  # Optional: Monitoring with Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: subsoxy-prometheus
    restart: unless-stopped
    profiles: ["monitoring"]
    
    ports:
      - "9090:9090"
    
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus:rw
    
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'

  # Optional: Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: subsoxy-grafana
    restart: unless-stopped
    profiles: ["monitoring"]
    
    ports:
      - "3000:3000"
    
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin123}
      - GF_USERS_ALLOW_SIGN_UP=false
    
    volumes:
      - grafana_data:/var/lib/grafana:rw
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning:ro

volumes:
  subsoxy_data:
    driver: local
  subsoxy_logs:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  default:
    name: subsoxy_network
    driver: bridge